/* ... (all previous CSS styles remain the same) ... */

/* ---- NEW STYLE for Thank You Page ---- */
.thank-you-message {
    margin-top: 40px;
    background: var(--surface-color);
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.05);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}
.thank-you-message h3 { color: var(--c-blue); font-size: 2rem; }
.thank-you-message p { font-size: 1.1rem; margin: 15px 0 25px; }```

---

### Step 4: Update Your `script.js` File

This is the final step. We are replacing all the EmailJS code with a much simpler function that prepares our form for submission to FormSubmit.

**Replace the entire content of your `script.js` file with this:**

```javascript
document.addEventListener('DOMContentLoaded', () => {

    // --- Product Database ---
    const productData = { "methiLadoo": { name: "Methi Ladoo", price: 800 }, "paushtikLadoo": { name: "Paushtik Ladoo", price: 900 }, "dryFruitLadoo": { name: "Dry Fruit Ladoo", price: 1000 } };

    // --- Core UI Functions (Unchanged) ---
    const mobileNavToggle = document.querySelector('.mobile-nav-toggle');
    const mainNav = document.querySelector('.main-nav');
    if (mobileNavToggle && mainNav) {
        mobileNavToggle.addEventListener('click', () => { mobileNavToggle.classList.toggle('active'); mainNav.classList.toggle('active'); });
    }
    document.querySelectorAll('.main-nav a').forEach(link => {
        link.addEventListener('click', () => { if (mainNav && mainNav.classList.contains('active')) { mobileNavToggle.classList.remove('active'); mainNav.classList.remove('active'); } });
    });
    document.querySelectorAll('.flashcard').forEach(card => {
        card.addEventListener('click', (e) => { if (e.target.closest('button, a')) return; card.classList.toggle('flipped'); });
    });

    // --- Toast Notification Function (Unchanged) ---
    let toastTimeout;
    const showToastNotification = (message) => { /* ... same code as before ... */ };

    // --- Shopping Cart Logic (Unchanged) ---
    const getCart = () => JSON.parse(localStorage.getItem('shoppingCart')) || [];
    const saveCart = (cart) => localStorage.setItem('shoppingCart', JSON.stringify(cart));
    const updateCartBanner = () => { /* ... same code as before ... */ };
    const addToCart = (productId, quantity) => { /* ... same code as before ... */ };
    document.querySelectorAll('[data-product-id]').forEach(productElement => { /* ... same code as before ... */ });

    // --- Page Specific Logic ---
    if (document.querySelector('.product-list')) { /* ... same code for smart scroll as before ... */ }
    
    // --- CHECKOUT PAGE LOGIC (REBUILT FOR FORMSUBMIT) ---
    if (document.getElementById('checkout-page')) {
        const checkoutForm = document.getElementById('checkout-form');
        const cartItemsContainer = document.getElementById('cart-items-container');
        const emptyCartMessage = document.getElementById('empty-cart-message');
        const checkoutSummary = document.getElementById('checkout-summary');
        const totalBillSpan = document.getElementById('total-bill-amount');
        
        const renderCartItems = () => { /* ... same code as before ... */ };
        const updateTotalBill = () => { /* ... same code as before ... */ };
        const updateCartItemQuantity = (productId, newQuantity) => { /* ... same code as before ... */ };
        const attachCheckoutEventListeners = () => { /* ... same code as before ... */ };
        
        // New handler for the form submission
        if (checkoutForm) {
            checkoutForm.addEventListener('submit', (event) => {
                // Generate the order details just before submitting
                const cart = getCart();
                const totalBill = cart.reduce((sum, item) => sum + (productData[item.id].price * item.quantity), 0);
                
                let orderDetailsText = "ORDER SUMMARY:\n";
                orderDetailsText += "--------------------------------\n";
                cart.forEach(item => {
                    const product = productData[item.id];
                    const subtotal = product.price * item.quantity;
                    orderDetailsText += `- ${product.name}: ${item.quantity}kg (₹${subtotal})\n`;
                });
                orderDetailsText += "--------------------------------\n";
                orderDetailsText += `TOTAL BILL: ₹${totalBill}`;

                // Create a hidden textarea to hold the order details
                const hiddenOrderDetails = document.createElement('textarea');
                hiddenOrderDetails.name = "Order Details";
                hiddenOrderDetails.value = orderDetailsText;
                hiddenOrderDetails.style.display = "none";
                checkoutForm.appendChild(hiddenOrderDetails);
                
                // Clear the cart from local storage after submission
                saveCart([]);
            });
        }
        
        // Initial render on page load
        renderCartItems();
    }
    
    // --- Run on every page load ---
    updateCartBanner();
});